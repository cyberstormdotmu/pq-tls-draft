



Network Working Group                                          F. Kiefer
Internet-Draft                                                   Mozilla
Intended status: Experimental                              June 27, 2018
Expires: December 29, 2018


                 Hybrid ECDHE-SIDH Key Exchange for TLS
                       draft-kiefer-pq-tls-latest

Abstract

   To allow interopability testing of post-quantum key-exchange
   algorithms this draft specifies a secure way to combine SIDH with
   ECDHE in TLS handshakes.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on December 29, 2018.

Copyright Notice

   Copyright (c) 2018 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (https://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.





Kiefer                  Expires December 29, 2018               [Page 1]

Internet-Draft                   pq-tls                        June 2018


1.  Introduction

   Supersingular elliptic curve isogenie diffie-hellman (SIDH) has been
   proposed [SIDH] as a diffie-hellman like key-exchange protocol secure
   against quantum computers.  Because there's not enough confidence in
   the security of SIDH yet it should only be used in combination with a
   classical key-exchange scheme.  This document defines a way to
   combine [eSIDH] with ECDHE for the TLS 1.3 [TLS13] key-exchange.
   Note that this is different from the recommended combindation in
   [eSIDH] because it uses standardised elliptic curves for ECDHE
   [RFC7748].  In particular "x25519" is combined with "sidh503" and
   "x448" is combined with "sidh751".

1.1.  Performance Considerations

   Both handshake partners have to compute the SIDH values in addition
   to the ECDHE values, which requires additional time for computation.
   The handshake messages also get larger because the SIDH values are
   added (see Section 4 for details).

1.2.  Notation

   x25519 and x448 denote the ECDHE algorithms defined over the
   respective curve from [RFC7748].  sidh503 and sidh751 denote the SIDH
   algorithms defined using prime of bit-length "p=503" and "751"
   respectively.

1.3.  Terminology

   RFC 2119 [RFC2119] defines the terms MUST, SHOULD, and MAY.

2.  Supersingular elliptic curve Isogenie Diffie-Hellman (SIDH)

   See [eSIDH] for details on how to compute key-exchange messages and
   the shared secret.  This document uses p508 and p751 defined in
   [eSIDH][sike].

3.  Negotiated Groups

   This document extends the enum of NamedGroups to use in the
   "supported_groups" extension from TLS 1.3 [TLS13] Section 4.2.7.  The
   new codepoint for the "Supported Groups Registry" is:

   enum {
   // other already defined elliptic curves (see TLS1.3 RFC)
       x25519sidh503(0x0105), x448sidh751(0x0106),
   //
   } NamedGroup;



Kiefer                  Expires December 29, 2018               [Page 2]

Internet-Draft                   pq-tls                        June 2018


4.  ECDHE-SIDH key exchange parameters

   This document defines ECDHE-SIDH parameters to use in the "key_share"
   extension from TLS 1.3 [TLS13] Section 4.2.8.  ECDHE parameters for
   both clients and servers are encoded in the key_exchange field of a
   KeyShareEntry as described in [TLS13] Section 4.2.8 and [RFC7748]
   described.

   In particular, the contents are the serialised value of the following
   struct:

      struct {
          opaque X[coordinate_length];
          opaque S[sidh_coordinate_length];
          opaque P[sidh_coordinate_length];
          opaque Q[sidh_coordinate_length];
      } UncompressedPointRepresentation;

   X is the public point from x25519 or x448 as described in [RFC7748].
   S, P, and Q are the binary representations of three field elements
   over GF(p503^2) and GF(p751^2) respectively from the public SIDH key
   values in network byte order.  Elements over GF(p503) are encoded in
   63 octets in little endian format, i.e., the least significant octet
   is located in the lowest memory address.  Elements (a+b*i) over
   GF(p503^2), where a and b are defined over GF(p503), are encoded as
   {a, b}, with a in the lowest memory portion.  GF(p751) is accordingly
   encoded into 94 octets.  All values in the struct are encoded without
   length prefixes or separators.

   Implementers SHOULD perform the checks to verify the SIDH public key
   as specified in Section 9 of [eSIDH].

5.  ECDHE-SIDH Shared Secret Calculation

   The ECDHE and SIDH shared secrets are calculated independently.  The
   shared secret for ECDHE-SIDH is then the concatenation of the ECDHE
   and the SIDH shared secrets.  For x25519sidh503 for example this is

   secret = x25519_secret || sidh_secret

5.1.  ECDHE shared secret calculation

   The ECDHE shared secret calculation is performed as described in
   [TLS13] Section 7.4.2.







Kiefer                  Expires December 29, 2018               [Page 3]

Internet-Draft                   pq-tls                        June 2018


5.2.  SIDH shared secret calculation

   The SIDH shared secret is calculated as described in [eSIDH]
   Section 6.  The result is an element in GF(p^2).

6.  Security Considerations

   The security of SIDH is not well understood at this point.  Therefore
   the security of the ECDHE-SIDH handshake MUST NOT rely on the
   security of SIDH.  The security of the described key exchange relies
   on the security, in particular the collision resistence, of the used
   key-derivation function.  TLS 1.3 uses HKDF as defined in [RFC5869]
   as key-derivation function.  It is therefore important the hash
   function used in HKDF is collision-resistant.  With these assumptions
   ECDHE-SIDH is at least as secure as the used ECDHE.

7.  IANA Considerations

   This document makes no requests of IANA yet.

8.  Acknowledgements

9.  References

9.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC5869]  Krawczyk, H. and P. Eronen, "HMAC-based Extract-and-Expand
              Key Derivation Function (HKDF)", RFC 5869,
              DOI 10.17487/RFC5869, May 2010,
              <https://www.rfc-editor.org/info/rfc5869>.

   [RFC7748]  Langley, A., Hamburg, M., and S. Turner, "Elliptic Curves
              for Security", RFC 7748, DOI 10.17487/RFC7748, January
              2016, <https://www.rfc-editor.org/info/rfc7748>.

   [TLS13]    Rescorla, E., "The Transport Layer Security (TLS) Protocol
              Version 1.3", 2018,
              <https://tools.ietf.org/html/draft-ietf-tls-tls13-28>.








Kiefer                  Expires December 29, 2018               [Page 4]

Internet-Draft                   pq-tls                        June 2018


9.2.  Informative References

   [eSIDH]    Costello, C., Longa, P., and M. Naehrig, "Efficient
              algorithms for supersingular isogeny Diffie-Hellman",
              IACR-CRYPTO-2016 , 2016,
              <https://eprint.iacr.org/2016/413.pdf>.

   [SIDH]     Jao, D. and L. De Feo, "Towards quantum-resistant
              cryptosystems from supersingular elliptic curve isogenie",
              PQCrypto-2011 , 2011,
              <https://eprint.iacr.org/2011/506.pdf>.

   [sike]     Azarderakhsh, R., Campagna, M., Costello, C., De Feo, L.,
              Hess, B., Jalali, A., Jao, D., Koziel, B., LaMacchia, B.,
              Longa, P., Naehrig, M., Renes, J., Soukharev, V., and D.
              Urbanik, "Supersingular Isogeny Key Encapsulation",
              Submission to the NIST Post-Quantum Standardization
              project , 2017, <http://sike.org/files/SIDH-spec.pdf>.

Author's Address

   Franziskus Kiefer
   Mozilla

   Email: franziskuskiefer@gmail.com


























Kiefer                  Expires December 29, 2018               [Page 5]
